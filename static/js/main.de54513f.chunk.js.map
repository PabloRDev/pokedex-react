{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","pokemonName","setPokemonName","pokemonChosen","setPokemonChosen","name","number","species","image","hp","attack","defense","speed","type","pokemon","setPokemon","className","onChange","event","target","value","toLowerCase","placeholder","onClick","axios","get","then","res","data","id","sprites","front_default","stats","base_stat","types","toUpperCase","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAiGeA,EA7FH,WACV,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA8BJ,mBAAS,CACrCK,KAAM,GACNC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,KAAM,KATR,mBAAOC,EAAP,KAAgBC,EAAhB,KA8BA,OACE,sBAAKC,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,4CACA,uBACEH,KAAK,OAELI,SAAU,SAACC,GACThB,EAAegB,EAAMC,OAAOC,QAE9BA,MAAOnB,EAAYoB,cACnBC,YAAY,8BAEd,8BACGrB,GACC,wBAAQY,KAAK,SAASU,QAjCV,WACpBC,IACGC,IADH,4CAC4CxB,IACzCyB,MAAK,SAACC,GACLZ,EAAW,CACTV,KAAMJ,EACNK,OAAQqB,EAAIC,KAAKC,GACjBtB,QAASoB,EAAIC,KAAKrB,QAAQF,KAC1BG,MAAOmB,EAAIC,KAAKE,QAAQC,cACxBtB,GAAIkB,EAAIC,KAAKI,MAAM,GAAGC,UACtBvB,OAAQiB,EAAIC,KAAKI,MAAM,GAAGC,UAC1BtB,QAASgB,EAAIC,KAAKI,MAAM,GAAGC,UAC3BrB,MAAOe,EAAIC,KAAKI,MAAM,GAAGC,UACzBpB,KAAMc,EAAIC,KAAKM,MAAM,GAAGrB,KAAKR,OAE/BD,GAAiB,OAkBb,yBAMN,qBAAKY,UAAU,iBAAf,SACIb,EAOA,qCACE,6BAAKW,EAAQT,KAAK8B,gBAClB,qBAAKC,IAAKtB,EAAQN,MAAO6B,IAAKvB,EAAQT,OACtC,+BACE,2CADF,KACyBS,EAAQR,UAEjC,+BACE,4CADF,IACyBQ,EAAQP,WAEjC,+BACE,yCADF,IACsBO,EAAQD,QAE9B,+BACE,uCADF,IACoBC,EAAQL,MAE5B,+BACE,2CADF,IACwBK,EAAQJ,UAEhC,+BACE,4CADF,IACyBI,EAAQH,WAEjC,+BACE,0CADF,IACuBG,EAAQF,YA5BjC,qBACEI,UAAU,WACVoB,IAAI,4DACJC,IAAI,WCnDDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.de54513f.chunk.js","sourcesContent":["import \"./App.scss\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [pokemonName, setPokemonName] = useState(\"\");\n  const [pokemonChosen, setPokemonChosen] = useState(false);\n  const [pokemon, setPokemon] = useState({\n    name: \"\",\n    number: \"\",\n    species: \"\",\n    image: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    type: \"\",\n  });\n\n  const searchPokemon = () => {\n    axios\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)\n      .then((res) => {\n        setPokemon({\n          name: pokemonName,\n          number: res.data.id,\n          species: res.data.species.name,\n          image: res.data.sprites.front_default,\n          hp: res.data.stats[0].base_stat,\n          attack: res.data.stats[1].base_stat,\n          defense: res.data.stats[2].base_stat,\n          speed: res.data.stats[5].base_stat,\n          type: res.data.types[0].type.name,\n        });\n        setPokemonChosen(true);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"TitleSection\">\n        <h1>Pokédex</h1>\n        <input\n          type=\"text\"\n          // onSubmit={searchPokemon}\n          onChange={(event) => {\n            setPokemonName(event.target.value);\n          }}\n          value={pokemonName.toLowerCase()}\n          placeholder=\"Search your Pokémon...\"\n        />\n        <div>\n          {pokemonName && (\n            <button type=\"submit\" onClick={searchPokemon}>\n              Search\n            </button>\n          )}\n        </div>\n      </div>\n      <div className=\"DisplaySection\">\n        {!pokemonChosen ? (\n          <img\n            className=\"pokeball\"\n            src=\"https://c.tenor.com/Hg2Mb_mQdhYAAAAi/pokemon-pokeball.gif\"\n            alt=\"\"\n          ></img>\n        ) : (\n          <>\n            <h1>{pokemon.name.toUpperCase()}</h1>\n            <img src={pokemon.image} alt={pokemon.name} />\n            <h3>\n              <span>Number:</span> #{pokemon.number}\n            </h3>\n            <h3>\n              <span>Species:</span> {pokemon.species}\n            </h3>\n            <h3>\n              <span>Type:</span> {pokemon.type}\n            </h3>\n            <h4>\n              <span>Hp:</span> {pokemon.hp}\n            </h4>\n            <h4>\n              <span>Attack:</span> {pokemon.attack}\n            </h4>\n            <h4>\n              <span>Defense:</span> {pokemon.defense}\n            </h4>\n            <h4>\n              <span>Speed:</span> {pokemon.speed}\n            </h4>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}